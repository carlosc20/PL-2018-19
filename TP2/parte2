#!/usr/bin/gawk -f


BEGIN  {
    RS="NIL";
    FS=";"
    nCod = 0;
    beginGrafo("grafo.dot");
}

NR > 1 {
    if($2~/([0-9]+\.?)+/){
        nCod++;
        print "Código: ",$2;
        print "Titulo: ",$3;
        print "Descrição: ",$4;
        if($27 != "")
            print "Notas: ",$27;
            
        print "\n";

        #Tipo
        if($10=="") 
            $10="Sem tipo";
        tipos[$10]++;

        #Diplomas juridico-administrativos 
        if($8!=""){
            split($8,leis,"#")
            printf ("\t\"%s\" -> {",$2) > "grafo.dot";
            for(l in leis){
                sub("\r\n","",leis[l]);
                sub("\"","",leis[l]);
                if(length(leis[l]) > 1) {
                    printf (" \"%s\"",leis[l]) > "grafo.dot";
                }
            }
            printf ("};\n") > "grafo.dot";
        }

        #Dono do processo
        if($12!=""){
            split($12,donos,"#")
            printf ("\t{") > "grafo.dot";
            for(d in donos){
                sub("\r\n","",donos[d]);
                sub("\"","",donos[d]);
                if(length(donos[d]) > 1) {
                    printf (" \"%s\"",donos[d]) > "grafo.dot";
                }
            }
            printf ("}-> {\"%s\"};\n", $2) > "grafo.dot";
        }

        #Participante do processo
        if($13!=""){
            split($13,par,"#")
            printf ("\t{") > "grafo.dot";
            for(p in par){
                sub("\r\n","",par[p]);
                sub("\"","",par[p]);
                if(length(par[p]) > 1) {
                    printf (" \"%s\"",par[p]) > "grafo.dot";
                }
            }
            printf ("}-> {\"%s\"} [style=dashed];\n", $2) > "grafo.dot";
        }
    }


}

END {
    print "Número de registos:" nCod;
    for(tip in tipos)
        print tip, "->", tipos[tip], "ocorrências"; 
    endGrafo("grafo.dot");
}

function beginGrafo(n) {
    print "digraph {" > n;
    print "ratio = \"compress\"" > n;
    print "ranksep=5.75; size = \"8.3,11.7!\";" > n;
    print "rankdir = LR;" > n;
}



function endGrafo(n) {
    print "}" > n;
}